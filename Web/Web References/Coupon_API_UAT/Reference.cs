//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace Web.Coupon_API_UAT {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DemoSoap", Namespace="http://tempuri.org/")]
    public partial class Demo : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CreateCouponOperationCompleted;
        
        private System.Threading.SendOrPostCallback VoidCouponOperationCompleted;
        
        private System.Threading.SendOrPostCallback AllocateCouponOperationCompleted;
        
        private System.Threading.SendOrPostCallback PickupCouponOperationCompleted;
        
        private System.Threading.SendOrPostCallback RedeemCouponOperationCompleted;
        
        private System.Threading.SendOrPostCallback RedeemMultiCouponOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCouponListsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCouponInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenreateCouponIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback RedeemCouponNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback PickUpCouponNewOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Demo() {
            this.Url = global::Web.Properties.Settings.Default.Web_Coupon_API_UAT_Demo;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CreateCouponCompletedEventHandler CreateCouponCompleted;
        
        /// <remarks/>
        public event VoidCouponCompletedEventHandler VoidCouponCompleted;
        
        /// <remarks/>
        public event AllocateCouponCompletedEventHandler AllocateCouponCompleted;
        
        /// <remarks/>
        public event PickupCouponCompletedEventHandler PickupCouponCompleted;
        
        /// <remarks/>
        public event RedeemCouponCompletedEventHandler RedeemCouponCompleted;
        
        /// <remarks/>
        public event RedeemMultiCouponCompletedEventHandler RedeemMultiCouponCompleted;
        
        /// <remarks/>
        public event GetCouponListsCompletedEventHandler GetCouponListsCompleted;
        
        /// <remarks/>
        public event GetCouponInfoCompletedEventHandler GetCouponInfoCompleted;
        
        /// <remarks/>
        public event GenreateCouponIDCompletedEventHandler GenreateCouponIDCompleted;
        
        /// <remarks/>
        public event RedeemCouponNewCompletedEventHandler RedeemCouponNewCompleted;
        
        /// <remarks/>
        public event PickUpCouponNewCompletedEventHandler PickUpCouponNewCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateCoupon", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateCoupon(
                    string companyCode, 
                    string brandCode, 
                    string couponID, 
                    string offCouponID, 
                    string CouponCode, 
                    string campaignCode, 
                    string campaignCodeType, 
                    string campaignChannel, 
                    string counterCode, 
                    string couponType, 
                    string discountCode, 
                    string discountBy, 
                    string discountRate, 
                    string PeriodType, 
                    string CouponPeriod, 
                    string couponDescription, 
                    string startTime, 
                    string endTime, 
                    string usageDescription, 
                    string wechatModuleID, 
                    string generateTime, 
                    string createUser, 
                    string createTime, 
                    string updateUser, 
                    string updateTime) {
            object[] results = this.Invoke("CreateCoupon", new object[] {
                        companyCode,
                        brandCode,
                        couponID,
                        offCouponID,
                        CouponCode,
                        campaignCode,
                        campaignCodeType,
                        campaignChannel,
                        counterCode,
                        couponType,
                        discountCode,
                        discountBy,
                        discountRate,
                        PeriodType,
                        CouponPeriod,
                        couponDescription,
                        startTime,
                        endTime,
                        usageDescription,
                        wechatModuleID,
                        generateTime,
                        createUser,
                        createTime,
                        updateUser,
                        updateTime});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateCouponAsync(
                    string companyCode, 
                    string brandCode, 
                    string couponID, 
                    string offCouponID, 
                    string CouponCode, 
                    string campaignCode, 
                    string campaignCodeType, 
                    string campaignChannel, 
                    string counterCode, 
                    string couponType, 
                    string discountCode, 
                    string discountBy, 
                    string discountRate, 
                    string PeriodType, 
                    string CouponPeriod, 
                    string couponDescription, 
                    string startTime, 
                    string endTime, 
                    string usageDescription, 
                    string wechatModuleID, 
                    string generateTime, 
                    string createUser, 
                    string createTime, 
                    string updateUser, 
                    string updateTime) {
            this.CreateCouponAsync(companyCode, brandCode, couponID, offCouponID, CouponCode, campaignCode, campaignCodeType, campaignChannel, counterCode, couponType, discountCode, discountBy, discountRate, PeriodType, CouponPeriod, couponDescription, startTime, endTime, usageDescription, wechatModuleID, generateTime, createUser, createTime, updateUser, updateTime, null);
        }
        
        /// <remarks/>
        public void CreateCouponAsync(
                    string companyCode, 
                    string brandCode, 
                    string couponID, 
                    string offCouponID, 
                    string CouponCode, 
                    string campaignCode, 
                    string campaignCodeType, 
                    string campaignChannel, 
                    string counterCode, 
                    string couponType, 
                    string discountCode, 
                    string discountBy, 
                    string discountRate, 
                    string PeriodType, 
                    string CouponPeriod, 
                    string couponDescription, 
                    string startTime, 
                    string endTime, 
                    string usageDescription, 
                    string wechatModuleID, 
                    string generateTime, 
                    string createUser, 
                    string createTime, 
                    string updateUser, 
                    string updateTime, 
                    object userState) {
            if ((this.CreateCouponOperationCompleted == null)) {
                this.CreateCouponOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateCouponOperationCompleted);
            }
            this.InvokeAsync("CreateCoupon", new object[] {
                        companyCode,
                        brandCode,
                        couponID,
                        offCouponID,
                        CouponCode,
                        campaignCode,
                        campaignCodeType,
                        campaignChannel,
                        counterCode,
                        couponType,
                        discountCode,
                        discountBy,
                        discountRate,
                        PeriodType,
                        CouponPeriod,
                        couponDescription,
                        startTime,
                        endTime,
                        usageDescription,
                        wechatModuleID,
                        generateTime,
                        createUser,
                        createTime,
                        updateUser,
                        updateTime}, this.CreateCouponOperationCompleted, userState);
        }
        
        private void OnCreateCouponOperationCompleted(object arg) {
            if ((this.CreateCouponCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCouponCompleted(this, new CreateCouponCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/VoidCoupon", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string VoidCoupon(string companyCode, string brandCode, string couponID, string reasonCode, string updateUser, string updateTime) {
            object[] results = this.Invoke("VoidCoupon", new object[] {
                        companyCode,
                        brandCode,
                        couponID,
                        reasonCode,
                        updateUser,
                        updateTime});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VoidCouponAsync(string companyCode, string brandCode, string couponID, string reasonCode, string updateUser, string updateTime) {
            this.VoidCouponAsync(companyCode, brandCode, couponID, reasonCode, updateUser, updateTime, null);
        }
        
        /// <remarks/>
        public void VoidCouponAsync(string companyCode, string brandCode, string couponID, string reasonCode, string updateUser, string updateTime, object userState) {
            if ((this.VoidCouponOperationCompleted == null)) {
                this.VoidCouponOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVoidCouponOperationCompleted);
            }
            this.InvokeAsync("VoidCoupon", new object[] {
                        companyCode,
                        brandCode,
                        couponID,
                        reasonCode,
                        updateUser,
                        updateTime}, this.VoidCouponOperationCompleted, userState);
        }
        
        private void OnVoidCouponOperationCompleted(object arg) {
            if ((this.VoidCouponCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VoidCouponCompleted(this, new VoidCouponCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AllocateCoupon", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AllocateCoupon(string companyCode, string brandCode, string couponID, string memberCode, string reasonCode, string updateUser, string updateTime) {
            object[] results = this.Invoke("AllocateCoupon", new object[] {
                        companyCode,
                        brandCode,
                        couponID,
                        memberCode,
                        reasonCode,
                        updateUser,
                        updateTime});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AllocateCouponAsync(string companyCode, string brandCode, string couponID, string memberCode, string reasonCode, string updateUser, string updateTime) {
            this.AllocateCouponAsync(companyCode, brandCode, couponID, memberCode, reasonCode, updateUser, updateTime, null);
        }
        
        /// <remarks/>
        public void AllocateCouponAsync(string companyCode, string brandCode, string couponID, string memberCode, string reasonCode, string updateUser, string updateTime, object userState) {
            if ((this.AllocateCouponOperationCompleted == null)) {
                this.AllocateCouponOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAllocateCouponOperationCompleted);
            }
            this.InvokeAsync("AllocateCoupon", new object[] {
                        companyCode,
                        brandCode,
                        couponID,
                        memberCode,
                        reasonCode,
                        updateUser,
                        updateTime}, this.AllocateCouponOperationCompleted, userState);
        }
        
        private void OnAllocateCouponOperationCompleted(object arg) {
            if ((this.AllocateCouponCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AllocateCouponCompleted(this, new AllocateCouponCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PickupCoupon", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PickupCoupon(string companyCode, string brandCode, string couponID, string memberCode, string reasonCode, string createUser, string createTime, string updateUser, string updateTime) {
            object[] results = this.Invoke("PickupCoupon", new object[] {
                        companyCode,
                        brandCode,
                        couponID,
                        memberCode,
                        reasonCode,
                        createUser,
                        createTime,
                        updateUser,
                        updateTime});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PickupCouponAsync(string companyCode, string brandCode, string couponID, string memberCode, string reasonCode, string createUser, string createTime, string updateUser, string updateTime) {
            this.PickupCouponAsync(companyCode, brandCode, couponID, memberCode, reasonCode, createUser, createTime, updateUser, updateTime, null);
        }
        
        /// <remarks/>
        public void PickupCouponAsync(string companyCode, string brandCode, string couponID, string memberCode, string reasonCode, string createUser, string createTime, string updateUser, string updateTime, object userState) {
            if ((this.PickupCouponOperationCompleted == null)) {
                this.PickupCouponOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPickupCouponOperationCompleted);
            }
            this.InvokeAsync("PickupCoupon", new object[] {
                        companyCode,
                        brandCode,
                        couponID,
                        memberCode,
                        reasonCode,
                        createUser,
                        createTime,
                        updateUser,
                        updateTime}, this.PickupCouponOperationCompleted, userState);
        }
        
        private void OnPickupCouponOperationCompleted(object arg) {
            if ((this.PickupCouponCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PickupCouponCompleted(this, new PickupCouponCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RedeemCoupon", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RedeemCoupon(string companyCode, string brandCode, string channel, string couponID, string memberCode, string reasonCode, string updateUser, string updateTime) {
            object[] results = this.Invoke("RedeemCoupon", new object[] {
                        companyCode,
                        brandCode,
                        channel,
                        couponID,
                        memberCode,
                        reasonCode,
                        updateUser,
                        updateTime});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RedeemCouponAsync(string companyCode, string brandCode, string channel, string couponID, string memberCode, string reasonCode, string updateUser, string updateTime) {
            this.RedeemCouponAsync(companyCode, brandCode, channel, couponID, memberCode, reasonCode, updateUser, updateTime, null);
        }
        
        /// <remarks/>
        public void RedeemCouponAsync(string companyCode, string brandCode, string channel, string couponID, string memberCode, string reasonCode, string updateUser, string updateTime, object userState) {
            if ((this.RedeemCouponOperationCompleted == null)) {
                this.RedeemCouponOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRedeemCouponOperationCompleted);
            }
            this.InvokeAsync("RedeemCoupon", new object[] {
                        companyCode,
                        brandCode,
                        channel,
                        couponID,
                        memberCode,
                        reasonCode,
                        updateUser,
                        updateTime}, this.RedeemCouponOperationCompleted, userState);
        }
        
        private void OnRedeemCouponOperationCompleted(object arg) {
            if ((this.RedeemCouponCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RedeemCouponCompleted(this, new RedeemCouponCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RedeemMultiCoupon", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RedeemMultiCoupon(string companyCode, string brandCode, string channel, string couponIDs, string memberCode, string reasonCode, string createUser, string createTime, string updateUser, string updateTime) {
            object[] results = this.Invoke("RedeemMultiCoupon", new object[] {
                        companyCode,
                        brandCode,
                        channel,
                        couponIDs,
                        memberCode,
                        reasonCode,
                        createUser,
                        createTime,
                        updateUser,
                        updateTime});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RedeemMultiCouponAsync(string companyCode, string brandCode, string channel, string couponIDs, string memberCode, string reasonCode, string createUser, string createTime, string updateUser, string updateTime) {
            this.RedeemMultiCouponAsync(companyCode, brandCode, channel, couponIDs, memberCode, reasonCode, createUser, createTime, updateUser, updateTime, null);
        }
        
        /// <remarks/>
        public void RedeemMultiCouponAsync(string companyCode, string brandCode, string channel, string couponIDs, string memberCode, string reasonCode, string createUser, string createTime, string updateUser, string updateTime, object userState) {
            if ((this.RedeemMultiCouponOperationCompleted == null)) {
                this.RedeemMultiCouponOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRedeemMultiCouponOperationCompleted);
            }
            this.InvokeAsync("RedeemMultiCoupon", new object[] {
                        companyCode,
                        brandCode,
                        channel,
                        couponIDs,
                        memberCode,
                        reasonCode,
                        createUser,
                        createTime,
                        updateUser,
                        updateTime}, this.RedeemMultiCouponOperationCompleted, userState);
        }
        
        private void OnRedeemMultiCouponOperationCompleted(object arg) {
            if ((this.RedeemMultiCouponCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RedeemMultiCouponCompleted(this, new RedeemMultiCouponCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCouponLists", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetCouponLists(string companyCode, string brandCode, string channel, string memberCode, string openID, string txUSer) {
            object[] results = this.Invoke("GetCouponLists", new object[] {
                        companyCode,
                        brandCode,
                        channel,
                        memberCode,
                        openID,
                        txUSer});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetCouponListsAsync(string companyCode, string brandCode, string channel, string memberCode, string openID, string txUSer) {
            this.GetCouponListsAsync(companyCode, brandCode, channel, memberCode, openID, txUSer, null);
        }
        
        /// <remarks/>
        public void GetCouponListsAsync(string companyCode, string brandCode, string channel, string memberCode, string openID, string txUSer, object userState) {
            if ((this.GetCouponListsOperationCompleted == null)) {
                this.GetCouponListsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCouponListsOperationCompleted);
            }
            this.InvokeAsync("GetCouponLists", new object[] {
                        companyCode,
                        brandCode,
                        channel,
                        memberCode,
                        openID,
                        txUSer}, this.GetCouponListsOperationCompleted, userState);
        }
        
        private void OnGetCouponListsOperationCompleted(object arg) {
            if ((this.GetCouponListsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCouponListsCompleted(this, new GetCouponListsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCouponInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCouponInfo(string companyCode, string brandCode, string channel, string shopCode, string couponID, string txUser) {
            object[] results = this.Invoke("GetCouponInfo", new object[] {
                        companyCode,
                        brandCode,
                        channel,
                        shopCode,
                        couponID,
                        txUser});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCouponInfoAsync(string companyCode, string brandCode, string channel, string shopCode, string couponID, string txUser) {
            this.GetCouponInfoAsync(companyCode, brandCode, channel, shopCode, couponID, txUser, null);
        }
        
        /// <remarks/>
        public void GetCouponInfoAsync(string companyCode, string brandCode, string channel, string shopCode, string couponID, string txUser, object userState) {
            if ((this.GetCouponInfoOperationCompleted == null)) {
                this.GetCouponInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCouponInfoOperationCompleted);
            }
            this.InvokeAsync("GetCouponInfo", new object[] {
                        companyCode,
                        brandCode,
                        channel,
                        shopCode,
                        couponID,
                        txUser}, this.GetCouponInfoOperationCompleted, userState);
        }
        
        private void OnGetCouponInfoOperationCompleted(object arg) {
            if ((this.GetCouponInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCouponInfoCompleted(this, new GetCouponInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GenreateCouponID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GenreateCouponID(string companyCode, string brandCode, string CouponCode) {
            object[] results = this.Invoke("GenreateCouponID", new object[] {
                        companyCode,
                        brandCode,
                        CouponCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenreateCouponIDAsync(string companyCode, string brandCode, string CouponCode) {
            this.GenreateCouponIDAsync(companyCode, brandCode, CouponCode, null);
        }
        
        /// <remarks/>
        public void GenreateCouponIDAsync(string companyCode, string brandCode, string CouponCode, object userState) {
            if ((this.GenreateCouponIDOperationCompleted == null)) {
                this.GenreateCouponIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenreateCouponIDOperationCompleted);
            }
            this.InvokeAsync("GenreateCouponID", new object[] {
                        companyCode,
                        brandCode,
                        CouponCode}, this.GenreateCouponIDOperationCompleted, userState);
        }
        
        private void OnGenreateCouponIDOperationCompleted(object arg) {
            if ((this.GenreateCouponIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenreateCouponIDCompleted(this, new GenreateCouponIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RedeemCouponNew", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RedeemCouponNew(string companyCode, string brandCode, string channel, string couponID, string memberCode, string reasonCode, string updateUser, string updateTime, string ValidateMember) {
            object[] results = this.Invoke("RedeemCouponNew", new object[] {
                        companyCode,
                        brandCode,
                        channel,
                        couponID,
                        memberCode,
                        reasonCode,
                        updateUser,
                        updateTime,
                        ValidateMember});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RedeemCouponNewAsync(string companyCode, string brandCode, string channel, string couponID, string memberCode, string reasonCode, string updateUser, string updateTime, string ValidateMember) {
            this.RedeemCouponNewAsync(companyCode, brandCode, channel, couponID, memberCode, reasonCode, updateUser, updateTime, ValidateMember, null);
        }
        
        /// <remarks/>
        public void RedeemCouponNewAsync(string companyCode, string brandCode, string channel, string couponID, string memberCode, string reasonCode, string updateUser, string updateTime, string ValidateMember, object userState) {
            if ((this.RedeemCouponNewOperationCompleted == null)) {
                this.RedeemCouponNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRedeemCouponNewOperationCompleted);
            }
            this.InvokeAsync("RedeemCouponNew", new object[] {
                        companyCode,
                        brandCode,
                        channel,
                        couponID,
                        memberCode,
                        reasonCode,
                        updateUser,
                        updateTime,
                        ValidateMember}, this.RedeemCouponNewOperationCompleted, userState);
        }
        
        private void OnRedeemCouponNewOperationCompleted(object arg) {
            if ((this.RedeemCouponNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RedeemCouponNewCompleted(this, new RedeemCouponNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PickUpCouponNew", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PickUpCouponNew(string companyCode, string brandCode, string couponID, string memberCode, string reasonCode, string updateUser, string updateTime, string ValidateMember) {
            object[] results = this.Invoke("PickUpCouponNew", new object[] {
                        companyCode,
                        brandCode,
                        couponID,
                        memberCode,
                        reasonCode,
                        updateUser,
                        updateTime,
                        ValidateMember});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PickUpCouponNewAsync(string companyCode, string brandCode, string couponID, string memberCode, string reasonCode, string updateUser, string updateTime, string ValidateMember) {
            this.PickUpCouponNewAsync(companyCode, brandCode, couponID, memberCode, reasonCode, updateUser, updateTime, ValidateMember, null);
        }
        
        /// <remarks/>
        public void PickUpCouponNewAsync(string companyCode, string brandCode, string couponID, string memberCode, string reasonCode, string updateUser, string updateTime, string ValidateMember, object userState) {
            if ((this.PickUpCouponNewOperationCompleted == null)) {
                this.PickUpCouponNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPickUpCouponNewOperationCompleted);
            }
            this.InvokeAsync("PickUpCouponNew", new object[] {
                        companyCode,
                        brandCode,
                        couponID,
                        memberCode,
                        reasonCode,
                        updateUser,
                        updateTime,
                        ValidateMember}, this.PickUpCouponNewOperationCompleted, userState);
        }
        
        private void OnPickUpCouponNewOperationCompleted(object arg) {
            if ((this.PickUpCouponNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PickUpCouponNewCompleted(this, new PickUpCouponNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CreateCouponCompletedEventHandler(object sender, CreateCouponCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateCouponCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateCouponCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void VoidCouponCompletedEventHandler(object sender, VoidCouponCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VoidCouponCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VoidCouponCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AllocateCouponCompletedEventHandler(object sender, AllocateCouponCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AllocateCouponCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AllocateCouponCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void PickupCouponCompletedEventHandler(object sender, PickupCouponCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PickupCouponCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PickupCouponCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void RedeemCouponCompletedEventHandler(object sender, RedeemCouponCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RedeemCouponCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RedeemCouponCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void RedeemMultiCouponCompletedEventHandler(object sender, RedeemMultiCouponCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RedeemMultiCouponCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RedeemMultiCouponCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetCouponListsCompletedEventHandler(object sender, GetCouponListsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCouponListsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCouponListsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetCouponInfoCompletedEventHandler(object sender, GetCouponInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCouponInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCouponInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GenreateCouponIDCompletedEventHandler(object sender, GenreateCouponIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenreateCouponIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenreateCouponIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void RedeemCouponNewCompletedEventHandler(object sender, RedeemCouponNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RedeemCouponNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RedeemCouponNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void PickUpCouponNewCompletedEventHandler(object sender, PickUpCouponNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PickUpCouponNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PickUpCouponNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591